{"version":3,"sources":["reportWebVitals.js","redux/actions/actionTypes.js","components/Header.jsx","redux/actions/actionCreators.js","redux/reducers/index.js","redux/reducers/rootReducer.js","firebase/index.js","index.jsx","redux/store/index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","dispatch","useDispatch","useSelector","store","auth","isAuthenticated","user","loggedInTemplate","onClick","a","firebase","signOut","type","actionTypes","given_name","src","picture","alt","name","provider","GoogleAuthProvider","addScope","signInWithPopup","data","additionalUserInfo","profile","combineReducers","state","action","process","REACT_APP_AUTH_DOMAIN","ReactDOM","render","StrictMode","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","thunk","configureStore","document","getElementById"],"mappings":"iLAceA,EAdS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAEnB,IADLC,EACI,EADJA,OAAQC,EACJ,EADIA,OAAQC,EACZ,EADYA,OAAQC,EACpB,EADoBA,OAAQC,EAC5B,EAD4BA,QAEhCJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iCCTC,EACN,QADM,EAEL,S,WCEK,SAASQ,IACtB,IAAMC,EAAWC,cACjB,EAAkCC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAvDC,EAAR,EAAQA,gBAAiBC,EAAzB,EAAyBA,KAKnBC,EACJ,qCACE,wBACEC,QALoB,kBAAMR,ECQhC,uCAAO,WAAOA,GAAP,SAAAS,EAAA,sEACCC,IAASN,OAAOO,UADjB,OAELX,EAAS,CACPY,KAAMC,IAHH,2CAAP,wDDFMD,KAAK,SAFP,oBAMA,2CAEG,IAFH,OAGGN,QAHH,IAGGA,OAHH,EAGGA,EAAMQ,cAET,qBAAKC,IAAG,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAMU,QAASC,IAAG,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAMY,UAIxC,OACE,iCACIb,EACEE,EAEA,wBACEC,QA1Be,kBAAMR,ECJ/B,uCAAO,WAAOA,GAAP,mBAAAS,EAAA,6DACCU,EAAW,IAAIT,IAASN,KAAKgB,oBAC1BC,SAAS,qDAFb,SAIcX,IAASN,OAAOkB,gBAAgBH,GAJ9C,OAICI,EAJD,OAKLvB,EAAS,CACPY,KAAMC,EACNP,KAAI,OAAEiB,QAAF,IAAEA,GAAF,UAAEA,EAAMC,0BAAR,aAAE,EAA0BC,UAP7B,2CAAP,wDD+BUb,KAAK,SAFP,qB,oBE9BKc,kBAAgB,CAC7BpB,KCFa,WAA8D,IAA7CqB,EAA4C,uDAApC,CAAEtB,iBAAiB,GAASuB,EAAQ,uCAC1E,OAAQA,EAAOhB,MACb,KAAKC,EACH,MAAO,CACLR,iBAAiB,EACjBC,KAAMsB,EAAOtB,MAEjB,KAAKO,EACH,MAAO,CACLR,iBAAiB,GAGrB,QACE,OAAOsB,M,kBCTCE,qcAAYC,sBAM1BpB,IAASN,OCJT2B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU9B,MCNC,SAAwB+B,GACrC,IAAMC,EAAmBC,OAAOC,sCAAwCC,IACxE,OAAOC,YACLC,EACAN,EACAC,EAAiBM,YAAgBC,ODChBC,GAAjB,SACE,cAAC5C,EAAD,QAGJ6C,SAASC,eAAe,SAM1BvD,M","file":"static/js/main.a82d3c0d.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default {\n  LOGIN: 'LOGIN',\n  LOGOUT: 'LOGOUT',\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout } from '../redux/actions/actionCreators';\n\nexport default function Header() {\n  const dispatch = useDispatch();\n  const { isAuthenticated, user } = useSelector((store) => store.auth);\n\n  const handleLoginClick = () => dispatch(login());\n  const handleLogoutClick = () => dispatch(logout());\n\n  const loggedInTemplate = (\n    <>\n      <button\n        onClick={handleLogoutClick}\n        type=\"button\"\n      >\n        Logout\n      </button>\n      <span>\n        Welcome\n        {' '}\n        {user?.given_name}\n      </span>\n      <img src={user?.picture} alt={user?.name} />\n    </>\n  );\n\n  return (\n    <header>\n      { isAuthenticated\n        ? loggedInTemplate\n        : (\n          <button\n            onClick={handleLoginClick}\n            type=\"button\"\n          >\n            Login\n          </button>\n        )}\n    </header>\n  );\n}\n","import firebase from 'firebase';\nimport actionTypes from './actionTypes';\n\nexport function login() {\n  return async (dispatch) => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');\n\n    const data = await firebase.auth().signInWithPopup(provider);\n    dispatch({\n      type: actionTypes.LOGIN,\n      user: data?.additionalUserInfo?.profile,\n    });\n  };\n}\n\nexport function logout() {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch({\n      type: actionTypes.LOGOUT,\n    });\n  };\n}\n","import { combineReducers } from 'redux';\nimport user from './rootReducer';\n\nexport default combineReducers({\n  user,\n});\n","import actionTypes from '../actions/actionTypes';\n\nexport default function reducer(state = { isAuthenticated: false }, action) {\n  switch (action.type) {\n    case actionTypes.LOGIN:\n      return {\n        isAuthenticated: true,\n        user: action.user,\n      };\n    case actionTypes.LOGOUT:\n      return {\n        isAuthenticated: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\n// eslint-disable-next-line no-unused-vars\nconst initializeApp = ({\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n});\nfirebase.auth();\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Header from './components/Header';\nimport configureStore from './redux/store';\nimport './firebase';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <Header />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from '../reducers';\n\nexport default function configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  return createStore(\n    reducers,\n    preloadedState,\n    composeEnhancers(applyMiddleware(thunk)),\n  );\n}\n"],"sourceRoot":""}
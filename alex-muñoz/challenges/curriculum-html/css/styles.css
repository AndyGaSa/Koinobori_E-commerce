:root{
    /* Pseudoselector(selector que no existe en el html) para almacenar variables de css llamadas custom properties.Podemos crear nuestra paleta de colores que utilizaremos en nuestra pagina web para luego utilizarla como variables */
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #FFc107;
    --secundario: #0097A7;
    --gris: #757575;
    --grisClaro: #DFE9F3;

    /* --fuente-principal: 3.8rem; tambien sirve para tamaños de fuentes,etc. cualquier cosa que vayas a reutilizar. */

}

/* Globaes */
html{
    font-size: 62,5%;/*hack que se utiliza para realizar la equivalencia de 1 rem a 10 pixeles*/
    /* utilizamos el siguiente sniped para hacer que las medidas que pongamos del css no se vean alteradas y sea mas facil trabajar con csss */
    box-sizing: border-box;
    scroll-snap-type: y mandatory;/* Sirve para hacer el efecto scroll  */  
}
/** Scroll Snapp **/
.servicios,
.navegacion-principal,
.formulario{
    scroll-snap-align: center;
    scroll-snap-stop: always;/* sirve para hacer que el scroll se detenga en esta seccion */
    
}
*, *:before, *:after {
    box-sizing: inherit;
}
/* el sniped llega hasta aqui */
body{
    font-size: 16px;/*1rem=10px utilizar este codigo y el de arriba en todos los proyectos para que se adapte mejor a todas las pantallas*/
    font-family: 'Krub', sans-serif;
    /* Para crear un degradado se utiliza el siguiente codigo: Tambien se puede generar degradados enla pagina web CSSmatc en Gradient Generator */
    background-image: linear-gradient(to top,var(--grisClaro) 0%,var(--blanco) 100%);
}
h1{
    font-size: 3.8rem;
}
h2{
    font-size: 2.3rem;
}
h2 span{
    font-size: 3rem;
}
h3{
    font-size: 1.8rem;
}

h1,h2,h3,h4,h5{
    text-align: center;
}



.contenedor{
    max-width: 120rem;
    margin: 0 auto;
    justify-content: right;

}

.boton{
    background-color: var(--secundario);
    color:var(--blanco);
    padding: 1rem 3rem;
    margin-top: 1rem;
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 80%;
    text-align: center;
    border: none;

}
@media (min-width: 768px){
    .boton{
        width:auto;
    }
.boton:hover{
    cursor:pointer;
}
.sombra{
    /* Este es el codigo del sombreado generado en Cssmatic */
    -webkit-box-shadow: 0px 5px 15px 0px rgba(145,145,145,0.54);
    -moz-box-shadow: 0px 5px 15px 0px rgba(145,145,145,0.54);
    box-shadow: 0px 5px 15px 0px rgba(145,145,145,0.54);
    
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;/* Para redondear las esquinas : */
}
}


/**Utilidades**/
.w-sm-100{
    width: 100%;
}
@media (min-width: 768px){
    .w-sm-100{
        width:auto;
    }
}
.flex{
    display: flex;
}
.alinear-derecha{
    display: flex;
    justify-content: flex-end;
    justify-content: space-around;
}

.nav-bg{
    background-color: var(--secundario);
}

.navegacion-principal {
    display: flex;
    flex-direction: column;
    
}
@media (min-width: 768px){
    .navegacion-principal{
        flex-direction: row;
        justify-content: space-around;
    }
}
.navegacion-principal a{
    display: block;
    text-align:center;
    color: var(--blanco);
    text-decoration: none;
    font-size: 2rem;
    font-weight: 700;
    padding: 1rem;
}


.navegacion-principal a:hover{
    background-color: var(--primario);
    color: var(--oscuro);
}

.hero{
    /* para vincular una imagen directamente desde css creamos una clase la cual la llamaremos en el html y en esta clase en css vinculamos la imagen */
    
    background-image: url(../img/hero.jpg);
    /* por default todas las imagenes se repiten, y como no queremos que se repita  utilizamos el siguiente codigo */
    background-repeat: no-repeat;
    /* cuando la imagen no cubre todo el div, utilizamos el siguiente codigo para utilizar todo el ancho disponible */
    background-size: cover;
    /* CSS box model: el tamaño de la pantalla esta delimitado por 4 cosas: el tamaño del contenido, el tamaño del relleno(paddin), tamaño del borde y el margen,si vamos añadiento parametros de paddin , heigh ,etc se ve alterado. por ello utilizamos un sniped mas arriba para evitar esto*/
    height: 450px;
    /* se pone el codigo posicion relativa al padre para que el hijo tome como referencia y lo posicionemos como queramos en base al padre  */
    position: relative;
    margin-bottom: 2rem;
}


.contenido-hero{
    position: absolute;
    /* background-color:rgba(0,0,0,.45);Sintaxix para la transparencia antigua */
    background-color:rgb(0 0 0 / 50%); /*Sintaxis nueva, pero no todos los navegadores la soportan aun, debido a que es muy reciente.*/
    height: 100%;
    width: 100%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p{
    color: var(--blanco);
}
/* sidebar */
/* .sidebar{
height: 100%;
width: 150px;
position: absoluta;
left: 0;
right: 0 40px;
background-color: azul claro;
} */

.sidebar div {
width: 8px;
display: block;
}

.body-text {
margin-left: 150px 18px;
}


/** Servicios **/

@media (min-width: 768px){

.servicios{
    /* Mientras que flexbox se ubica el contenido automaticamente en cierto lugar el ccss grid el contenido se agrupa dentro de un area definida. En flexbox solo tienes acceso a una dimension, o row o colum, pero con css grid tienes acceso a las dos dimensiones al mismo tiempo. */
    /* Utiliza flexbox para la alineacion o distribucion de elementos que estaran dentro de contenedores como una barra de naavegacion, utiliza grid para definir el layout de tu sitio web, como pueden ser las columnas o contenedores de los elementos */
    display: grid;
    grid-template-columns: 1fr 1fr 1fr; /*o tambien se puede poner repeat(3,1fr) y es lo mismo.*/
/* 1 fr es una fraccion, depende los fr que pongas lo distribuira en ese espacio. En este caso seria equivalente a poner 33,3% 33,3% 33,3% */
    /* grid-template-columns: 300px 300px; */
    /* grid-template-rows: 200px 800px; */
    /* grid:200px 800px/300px 300px; Este codigo es lo mismo que escribir los dos anteriores. */
    column-gap: 1rem; /* Para la separacion de columnas */
    
}

.servicio{
    display: flex;
    flex-direction:column;
    align-items: center;
}
.servicio h3{
    color: var(--secundario);
    font-weight: normal;
    text-align: center;
}
.servicio p{
    line-height: 2;  /* modifica el interlineado */
    text-align: center;
}
.servicio .iconos{
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius:50%; /* Si haces border radius del 50% a un cuadrado hace un circulo exacto */
    display: flex; /* coloca los iconos uno frente al otro */
    justify-content: space-evenly; /* los alineamos horizontalmente */
    align-items: center; /* los alineamos verticalmente  */
}
}
/* codigo repetido para hacer responsive en movil provisional */
@media (max-width: 768px){
  
    .servicio{
        display: flex;
        flex-direction:column;
        align-items: center;
    }
    .servicio h3{
        color: var(--secundario);
        font-weight: normal;
        text-align: center;
    }
    .servicio p{
        line-height: 2;  /* modifica el interlineado */
        text-align: center;
    }
    .servicio .iconos{
        height: 15rem;
        width: 15rem;
        background-color: var(--primario);
        border-radius:50%; /* Si haces border radius del 50% a un cuadrado hace un circulo exacto */
        display: flex; /* coloca los iconos uno frente al otro */
        justify-content: space-evenly; /* los alineamos horizontalmente */
        align-items: center; /* los alineamos verticalmente  */
    }
}
/* repetido hasta aqui */

/* Contacto */

.formulario{
    background-color: var(--gris);
    width: min(60rem , 100%); /* sirve para que utilize el valor mas pequeño */
    margin: 0 auto; /* para centrar contenido horizontalmente, utilizarlo cuando su padre no sea un display flex */
    padding: 2rem;/* Para dar margen interno del formulario */
    border-radius:1rem;
    
}
.formulario fieldset{
    border: none;
}
.formulario legend{
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}
@media (min-width: 768px){
    .contenedor-campos{
        display: grid;
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem;
    }
    .campo:nth-child(3),
    .campo:nth-child(4){    /* con nth-child conseguimos seleccionar el numero 3 de clase campo para no tener que añadir ninguna clase extra, es decir al haber la misma clase 4 veces y querer seleccionar una de ellas , utilizamos este `pseudocodigo para poder seleccionar el que queremos */
        grid-column: 1/3;/* Con grid column, decimos las cordenadas en las que queremos que vaya */
        
    }

}

.campo{
    margin-bottom:1rem;
}
.campo label{
    color:var(--blanco);
    font-weight: bold;
    margin-bottom:.5rem;
    display:block;
}
.campo textarea{
    height: 17rem;
}
.input-text{
    width: 100%;
    border:none;
    padding:1.5rem;
    border-radius:.5rem;

}
/**Footer**/
.footer{
    text-align: center;
}